Essential Google Cloud Infrastructure: Core Services

Learning Objectives
	1. Understand how to navigate the course
	2. Understand how to download course resources

Module 1 - Identity and Access Management(IAM)
	- Administer Identity and Access Management for resources

	Learning Objectives
		1. Describe the IAM resource hierarchy
		2. Explain the different types of IAM roles
		3. Recall the different types of IAM members
		4. Implement access control for resources using IAM

	Identity and Access Management
		- identiyfying who can do what on which resources
		who
			- IAM member
		what
			- roles
				- permissions
		resources
			- Google cloud service

	

	Organization
		- root node for google cloud hierarchy
		- when workspace domain/identity accoun creates project, their domain name will be the name of their organization
		Roles
			Workspace/Cloud Identity super admin
				- assign the organization admin role to some users
				- be the point of contact in case of recovery issues
				- control the lifecycle of the workspace or cloud identity accound and organization resource
			- organization admin
				- control over all cloud resources
				- useful for auditing
				- define IAM policies
				- determine structure of the resource hierarchy
				- delegate responsibility over critical components such as 
					- networking
					- billing
					- resource hierarchy through IAM roles
			- project creator
				- controls project creation
				- control over who can create projects
	Folders
		- where you can isolate department -> teams -> products  or shared Infrastructure
		- allow delegation of adnmin rights

	projects
		- enabled: 
			- services, 
			- api, 
			- billing, 
			- add/remove collaborator
	
	Resource Manager Roles
		Organization
			- admin
				- full control over all resources
			- view access to all resources

		Folders
			- admin
				- full control over folders
			- creator
				- browse hierarchy and create folders
			- viewer
				- view folders and projects below a resource
		projects
			creator
				- create new projects(automatic owner) and migrate new projects into organization
			deleter
				- delete projects
	roles
		- offers fixed level access
			- owner
				- full admin access
				- invite members
				- remove members
				- delete projects
			- editor
				- deploy app
				- modify code
				- config services 
			- viewer
				- read only acess
			- billing admin
				- manage billing
				- add and remove admin
				- no rights change resources in the project
		Three types	
			1. Basic
				- owner
				- editor
				- viewer 
			2. Predefined
				- apply to aparticular google cloud service
				why	
					- grouping permissions into a role makes it easier to manage

				Sample
					Compute Engine
						- Compute admin role	
							- full control of all compute engine resources
						- Network admin role	
							- permission to create/modify/delete network resources
							- only read access to FW ruless SSL cert
							- read access to ephemeral IP addr too
					Cloud storage	
						- storage admin role
							- create/modify/delete disks/images/snapshots
							- given to manages project images without editing having edior role
			3. Custom
				When to use
					- Implementing least privileged model

	members
		- define who cand do what on wchich resources

	Types
		1. Google account
			- developer/admin/person who interacts with google cloud

		2. Service account	
			- an account that belongs to your app instead of an indiv end user
		3. Google group
			- name collection of google accounts and servic accouns
		4. Workspace domain
			- rep org internet domain
			- rep virtual group of all google accounts that have been created in an org workspace acct

		5. Cloud IAP
				- let users who don't have workspace domain manage users and groups using google admin console like wokspace domain

	IAM policies
		- policy consists of list of bindings
		- bindin bind a list of members to a role
			- role
				- named list of permissions defined by IAM 
	
	IAM allow policies
		- grant access to cloud resources
		- control access to the resource itself, as well as any descendants of that resource
		- associates, binds, one or more prinicpials(also known as a member or identity) w/ single IAM role

	IAM deny policies
		- deny rules prevent certain principals from using certain permissions, regardless of the roles they're granted
		- deny policies are made up of deny rules. Each deny rule spcifies:
			- a set of principals that are denied permissions
			- permissions that the principals are denied/unable to use
			- optional: condition that must be true for the permission to be denied
		- when principal is denied a permission, they can't do anything that requires that permission
	
	IAM Conditions	
		- enforce conditional, attribute-based access control for google resources
			- grant resource access to identities(members) only if config conditions are met
			- specified in the role bindings of a resource's IAM policy

	Organizaiton policies
		- config of Restrictions
		- defined by configuring a constraint w/ desired Restrictions
		- applied to the organization node, folders or projects
		
	Corporate directory migrations
		Microsft AD or LDAP -> Google Cloud Directory Sync -> Users and groups in your Cloud Identity domain
		
	Single sign-on(SSO)
		- use cloud identity to config SAML SSO
		- if SAML2 isn't supported, use a third party solution(ADFS, Ping, or OKTA)

	Note:
		- cannot use IAM to create or manage your users/groups
		- less restrictive parent policy will always ovverride more restrictive polociy
		- chose smallest scope
		- use role Recommendation to lessen excess permission
		- deny policies first before allow policies

	Service Accounts
		- an account that belongs to your cloud resources instead of an indiv end user
			- assistant robot that has secure access resources w/o using personal user credentials
		- identity for carrying out service to service interactions

		Types: 
			1. user-created(custom)
			2. built-in	
				- compute engine default service accounts
				- app engine default service accounts
			3. Google APIs service account
				- run internal google processes on your behalf

		When to use
			- convenient when you're not accessing user data
			- provisioning resources with terraform
			- App that interacrts with Google Cloud Storage 
	
		scopes
			- used to determine whether an authenticated identity is authorized
			- can be changed after an instance is created

		How it works?
			- programs running w/in compute engine instances can automatically acquire access tokens w/ credentials
				- tokens are used to access any service API in your project and any other services that granted access to that service account
		
		Service account permissions
			- default service accounts
				- basic roles
				- predefined roles
			- user created service accounts
				- predefined roles
			- roles for service accounts can be assigned ot gorup or users

		How service accounts authenticated?
		Two types of service account keys	
			1. Google-managed service accounts
				- all service accounts have google-managed keys
				- google stores both the public and private portion of the key
				- each public key can be used for signing for a maximum of two weeks
				- private keys are never directly accessible
			2. User managed service accounts
				- google only stores the public portion of a user managed key
				- users are responsible for private key security
				- can create upto 10 user-managed service account keys per service
				- can be administered via the IAM API, gcloud, or the console

		Note	
			- Each service has scopes
			- for user created service accounts, use IAM roles instead
			- google doesn't save user-managed private keys so they can't recover them
				- key rotation is managed by customer also

	Organization Restrictions
		- prevent data exfiltration through phishing or insider attacks
			- restricts access only to resources for authorized Google Cloud Organizations

		How it works?
			Managed Device(governed by company policies)
				-> Customer managed Egress proxy(Egress proxy admin  config proxy to add org restricitions headers to any req originating from managed device)
					-> Google Cloud Org/Vendor Google CLoud Org
						-> Cloud Storage


	IAM Best Practices
		1. Leverage and understand the resource hierarchy
			- use projects to group resources that share the same trust boundary
			- check the policy granted on each resource and make sure you understand the inheritance
			- use "principles of least privelege" when granting roles
			- audit policies in Cloud Audit Logs: setiampolicy
			- audit membership of groups used in policies
		2. Grant roles to Google groups instead of individuals
			- update group membership instead of changing IAM policy
			- audit membership of groups used in policies
			- control the ownership of the google group used in IAM policies
		3. Service Accounts Best Practices
			- Be very careful granting serviceAccountUser role
			- When you create a service account, give it a display name that cleary identifies its purpos
			- Establish a naming convention for service Accounts
			- Establish key rotation policies and methods
			- Audit w/ serviceAccount.keys.list() method
		4. Cloud Identity-Aware Proxy(IAP)
			- establish central authorization layer for app accessed by https
				- app level access control model instead of network level firewalls
					- means no VPN
			- enforce access control policies for app and resources:
				- identity-based access control
				- central authorization layer for app accessed by https
			- a security guard for your web app that controls access based on users identity/authenication and permission/authorization
			
		Note
				- IAM policy is applied after authentication.
	


	Qwiklabs - Exploring IAM
		https://googlecoursera.qwiklabs.com/focuses/34777833?parent=lti_session

		Objectives
			In this lab, you learn how to perform the following tasks:

				1. Use IAM to implement access control
				2. Restrict access to specific features or resources
				3 . Use the Service Account User role
	
		//list GCS bucket
			gcloud storage ls gs://[YOUR_BUCKET_NAME]

		Note
			- can grant group thus the members of the gfroup the role of Service Account User

	Quiz
	1. What abstraction is primarily used to administer user access in IAM ?
		-  Roles, an abstraction of job roles
			- IAN uses predefined roles for giving user access
			-	roles are define by more granukar permissios.
			- permissions are not applied to users directly, only through the roles that are assigned to them
	2. Which of the following is not a type of IAM role?
		- Advanced
		Type of IAM role:
			1. Basic
			2. Predefined
			3. Custom

	3. Which of the following is not a type of IAM member?
		- Organization Account 	
		Type of IAM member
			1. Google Account
			2. Cloud Identity domain
			3. Service Account
			4. Google Workspace domain
			5. Google group
			 
	Review
		- IAM builds on top of the Google Cloud services
		- Wokspace Admin/Cloud Identity
			- where creation of admin of corporate identities
			- handled by a person seprate from Google CLoud Administrator
		- Google Groups
			- establish a roles to all members
		- Wokspace admin
			- administers membership in the group
		- Service Accounts
			- enable you to build IaaS through terraform

Module 2 - Storage and Database Services
	- Implement data storage services in Google Cloud

	Learning Objectives
		1. Differentiate between Cloud Storage, Cloud SQL, Cloud Spanner, Firestore and Cloud Bigtable
		2. Choose a data storage service based on your requirements
		3. Implement data storage services

	Scope
		Infrastructure Track
			- Service differentiators
			- When to consider using each service
			- Set up and connect to a service
		
		Data Engineering Track
			- How to use a database system
			- Design, organization, structure, schema and use for an application
			- Details about how a service stores and retrieves structured data

	Cloud Storage

	Cloud Storage features

	Choosing a storage class

	Filestore

	Cloud SQL

	Cloud Spanner

	AlloyDB

	Firestore

	Cloud Bigtable

	Memorystore

	Quizes
	1. What data storage service might you select if you just needed to migrate a standard relational database running on a single machine in a datacenter to the cloud?
		- Cloud SQL
	2. Which Google Cloud data storage service offers ACID transactions and can scale globally?
		- Cloud Spanner
	3. Which data storage service provides data warehouse services for storing data but also offers an interactive SQL interface for querying the data?
		- BigQuery
			- data warehousing service that allows storage of huge data sets while making them immediately processable w/o having to extract or run the processing in a separate service

	Review
		1. Cloud Storage
			- fully managed object storage
		2. Filestore
			- fully managed file storage
		3. Cloud SQL
			- fully managed MySQL and PostgreSQL DB
		4. Cloud Spanner
			- relational DB service w/ transactional conistency, global cale and high availbility
		6. AlloyDB
			- fully managed postgreSQL compatible DB service
		7. Firestore
			- fully managed NoSQL document DB
		8. Cloud Bigtable	
			- fully managed noSQL wide column DB
		9. Memorystore
			- fully managed in-momemory data store servicefor Redis
		

Module 3 - Resource Management
	- Manage and examine billing of Google Cloud resources

Learning Objectives
	1. Describe the cloud resource manager hierarchy
	2. Recognize how quotas protect Google Cloud customers
	3. Organize resources using labels
	4. Explain the behavior of budget alerts in Google Cloud
	5. Examine billing data with BigQuery

Module 4 - Resource Monitoring
	- Monitor resources using Google Cloud's operations suite

Learning Objectives
	1. Describe Google Cloud's operations suite for monitoring, logging, error reporting, tracing, and debugging
	2. Create charts, alerts, and uptime checks for resources with Cloud Monitoring
	3. Identify and fix errors using Cloud Debugger

Essential Google Cloud Infrastructure: Scaling and Automation

Module 1 - Interconnecting Networks

Module 2 - Load Balancing and Autoscaling

Module 3 - Infrastructure Automation

Module 4 - Managed Services